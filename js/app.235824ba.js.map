{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/bignumber.js","webpack:///./src/components/HotHeader.vue?d6f2","webpack:///./src/App.vue?b956","webpack:///./src/components/HotHeader.vue?c9a6","webpack:///src/components/HotHeader.vue","webpack:///./src/components/HotHeader.vue?efbd","webpack:///./src/components/HotHeader.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/assets/config.js","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/App.vue?f446","webpack:///./src/App.vue?34ea"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","globalObject","BigNumber","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","v","b","alphabet","caseChanged","isNum","len","str","x","this","_isBigNumber","String","test","charCodeAt","indexOf","replace","search","substring","intCheck","round","DEBUG","charAt","toUpperCase","toLowerCase","format","rm","id","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","args","method","normalise","pop","sd","k","ni","rd","xc","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","max","arguments","lt","minimum","min","gt","random","pow2_53","random53bitInt","dp","a","rand","Uint32Array","copy","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","y","pow","concat","multiply","base","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","isOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","z","zs","define","_vm","_h","$createElement","_c","_self","attrs","staticClass","staticRenderFns","on","$event","toPage","class","currRouteName","_v","_s","_f","address","$Config","mounted","$getAddress","computed","$route","filters","addressFormat","addr","newAddr","methods","$router","component","components","HotHeader","wallet","totalDeposit","userInfo","deposit","Vue","use","VueRouter","router","routes","path","Config","log","Web3","I3","ethereum","web3","enable","web3Provider","currentProvider","getAddress","eth","getAccounts","res","$I3","filter","Element","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.235824ba.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-4f3ed595\":\"a7edb8ad\",\"chunk-2d0d3a92\":\"70cb6e38\",\"chunk-2d210fbc\":\"3f93f4fd\",\"chunk-5e5dcebc\":\"bf58528e\",\"chunk-c50f8224\":\"88027791\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-5e5dcebc\":1,\"chunk-c50f8224\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-4f3ed595\":\"31d6cfe0\",\"chunk-2d0d3a92\":\"31d6cfe0\",\"chunk-2d210fbc\":\"31d6cfe0\",\"chunk-5e5dcebc\":\"afe4ee26\",\"chunk-c50f8224\":\"bd3f5048\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HotHeader.vue?vue&type=style&index=0&id=57881ea8&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"bg\"}),_c('hot-header'),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hot_header_module\"},[_c('div',{staticClass:\"hot_header\"},[_c('div',{staticClass:\"hot_header_left logo\",on:{\"click\":function($event){return _vm.toPage('homepage')}}}),_c('div',{staticClass:\"hot_header_right hot_header_row\"},[_c('div',{class:['hot_header_col', _vm.currRouteName === 'lp' ? 'is_active' : ''],on:{\"click\":function($event){return _vm.toPage('lp')}}},[_vm._v(\"LP区\")]),_c('div',{class:['hot_header_col', _vm.currRouteName === 'pledge' ? 'is_active' : ''],on:{\"click\":function($event){return _vm.toPage('pledge')}}},[_vm._v(\"质押池\")]),_c('div',{class:['hot_header_col', _vm.currRouteName === 'mine' ? 'is_active' : ''],on:{\"click\":function($event){return _vm.toPage('mine')}}},[_vm._v(\"我的\")])])]),_c('div',{staticClass:\"hot_header\"},[_c('div',{staticClass:\"hot_header_left\"}),_c('div',{staticClass:\"hot_header_right hot_header_row\"},[_c('div',{staticClass:\"hot_header_col address\",on:{\"click\":function($event){return _vm.toPage('mine')}}},[_c('span',{staticClass:\"not_enabled\"},[_vm._v(\"未激活\")]),_vm._v(\" \"+_vm._s(_vm._f(\"addressFormat\")(_vm.address))+\" \")]),_c('div',{staticClass:\"hot_header_col tag\"},[_vm._v(\"EN\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<div class=\"hot_header_module\">\n  <div class=\"hot_header\">\n    <div class=\"hot_header_left logo\" @click=\"toPage('homepage')\"></div>\n    <div class=\"hot_header_right hot_header_row\">\n      <div :class=\"['hot_header_col', currRouteName === 'lp' ? 'is_active' : '']\" @click=\"toPage('lp')\">LP区</div>\n      <div :class=\"['hot_header_col', currRouteName === 'pledge' ? 'is_active' : '']\" @click=\"toPage('pledge')\">质押池</div>\n      <!-- <div :class=\"['hot_header_col', currRouteName === 'dao' ? 'is_active' : '']\" @click=\"toPage('dao')\">DAO</div> -->\n      <div :class=\"['hot_header_col', currRouteName === 'mine' ? 'is_active' : '']\" @click=\"toPage('mine')\">我的</div>\n    </div>\n  </div>\n  <div class=\"hot_header\">\n    <div class=\"hot_header_left\"></div>\n    <div class=\"hot_header_right hot_header_row\">\n      <div class=\"hot_header_col address\" @click=\"toPage('mine')\">\n        <!-- <span class=\"is_enabled\">已激活</span> -->\n        <span class=\"not_enabled\">未激活</span>\n       {{address | addressFormat}}\n      </div>\n      <div class=\"hot_header_col tag\">EN</div>\n    </div>\n  </div>\n</div>\n\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return this.$Config\n  },\n\n  mounted() {\n    this.$getAddress()\n  },\n\n\n  computed: {\n    currRouteName() {\n      return this.$route.name\n    },\n  },\n\n  filters: {\n    addressFormat(addr) {\n      if (!addr) return ''\n      const newAddr = addr\n      if (newAddr.length > 8) {\n        return `${newAddr.substr(0, 4)}...${newAddr.substr(newAddr.length-4, 4)}`\n      }\n      return addr\n    }\n  },\n  methods: {\n    toPage(name) {\n      // if (name === 'dao') return Message.warning({\n      //   type: 'warning',\n      //   message: '暂未开放',\n      //   customClass: 'notity_message',\n      //   showClose: true,\n      //   // duration: 0\n      // })\n      this.$router.push({ name})\n    }  \n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.hot_header_module {\n  padding: 30px 23px 0;\n}\n.hot_header {\n  display: flex;\n  .hot_header_left {\n  }\n  .logo {\n    width: 78px;\n    height: 35px;\n    background: url(\"../assets/image/logo.png\") no-repeat;\n    background-size: 100% 100%;\n  }\n  .hot_header_right {\n    flex: 1;\n    text-align: center;\n  }\n}\n.hot_header_row {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  .hot_header_col {\n    cursor: pointer;\n    margin: 0 12px;\n    display: inline-block;\n    min-width: 30px;\n    font-size: 14px;\n    font-family: PingFangSC-Semibold, PingFang SC;\n    font-weight: 600;\n    color: #70888f;\n    border-bottom: 4px solid transparent;\n    padding: 0 3px;\n  }\n  .is_active {\n    color: #41c6a6;\n    border-bottom: 3px solid #41c6a6;\n  }\n  .is_enabled {\n    font-size: 11px;\n    font-weight: 400;\n    color: #41c6a6;\n    line-height: 15px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    border: 1px solid #41c6a6;\n    border-radius: 3px;\n    margin-right: 5px;\n  }\n  .not_enabled {\n    font-size: 11px;\n    font-weight: 400;\n    color: #aeaeae;\n    line-height: 15px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    border: 1px solid #aeaeae;\n    border-radius: 3px;\n    margin-right: 5px;\n  }\n  .address {\n    color: #666;\n    font-size: 12px;\n    font-weight: 500;\n    border: none;\n    margin-top: 10px;\n  }\n  .tag {\n    border: none;\n    padding: 2px;\n    margin-top: 10px;\n    background: rgba(#fff, 0.58);\n    border-radius: 8px;\n    color: #333;\n    line-height: 20px;\n    font-size: 14px;\n    font-weight: 500;\n  }\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HotHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HotHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HotHeader.vue?vue&type=template&id=57881ea8&scoped=true&\"\nimport script from \"./HotHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./HotHeader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HotHeader.vue?vue&type=style&index=0&id=57881ea8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57881ea8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <div class=\"bg\"></div>\n    <hot-header></hot-header>\n    <router-view></router-view>\n    \n  </div>\n</template>\n\n<script>\nimport HotHeader from './components/HotHeader'\n\n// import Nets from './assets/net'\n\n\nexport default {\n  name: 'App',\n  components: {\n    HotHeader,\n   \n  },\n\n  data() {\n    return {\n      wallet: {\n        address: '0xB7357633A0255Bd0146285c6Bb4F63Ef66698654'\n      }\n    }\n  },\n  async mounted() {\n   \n  },\n  methods: {\n    \n  }\n}\n</script>\n\n<style lang=\"scss\">\n.notity_message {\n  margin-top: 78px;\n  background-color: white !important;\n  box-shadow: 0px 0px 24px 0px rgba(0, 0, 0, 0.13);\n  border: 1px solid #aad8d5 !important;\n  min-width: calc(100% - 50px) !important;\n  .el-message__content {\n    color: #333 !important;\n    font-weight: 400 !important;\n    line-height: 25px !important;\n    font-size: 18px !important;\n  }\n}\n</style>\n\n<style lang=\"scss\" scpoed>\n#app {\n  .bg {\n    z-index: -1;\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: url(\"./assets/image/app_bg.png\") no-repeat;\n    background-size: 100% 100%;\n  }\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=51f36e64&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&lang=scss&scpoed=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\r\n   address:\"\",\r\n   totalDeposit:{},\r\n   userInfo:[],\r\n   deposit:\"\",\r\n}\r\n","import VueRouter from 'vue-router'\nimport Vue from 'vue'\n\nVue.use(VueRouter)\n\nconst router = new VueRouter({\n  routes: [\n    {\n      path: '/',\n      name: 'homepage',\n      component: () => import('./views/homepage/index.vue')\n    },\n    {\n      path: '/index',\n      name: 'homepage',\n      component: () => import('./views/homepage/index.vue')\n    },\n    {\n      path: '/lp',\n      name: 'lp',\n      component: () => import('./views/lp/index.vue')\n    },\n    {\n      path: '/pledge',\n      name: 'pledge',\n      component: () => import('./views/pledge/index.vue')\n    },\n    {\n      path: '/mine',\n      name: 'mine',\n      component: () => import('./views/mine/index.vue')\n    },\n  ]\n})\n\nexport default router","import Vue from 'vue'\nimport App from './App.vue'\nimport Element from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport  { BigNumber }  from './assets/bignumber.js'\nVue.prototype.BigNumber = BigNumber;\n\nimport Config from './assets/config'\nVue.prototype.$Config = Config;\n\nimport \"@/assets/scss/app.scss\"\n\nvar x = BigNumber(0.1)\nvar y = x.plus(0.2)   \n\nconsole.log(\"y:\"+y)\n\n\n\n\n\n\n\n\nimport Web3 from 'web3'\nVue.prototype.Web3 = Web3\n\nvar I3=async function() {\n  if(window.ethereum) {\n    window.web3 = new Web3(ethereum);\n    try {\n      await ethereum.enable();\n      this.web3Provider = ethereum;\n    } catch(error) {}\n  } else if(window.web3) {\n    this.web3Provider = web3.currentProvider;\n    window.web3 = new Web3(web3.currentProvider);\n  } else {\n    console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n  }\n};\nI3();\nVue.prototype.$I3 = I3;\n\nVue.filter(\"multipUnit\", function(value) {\n  value =BigNumber(value)\n  return value.multipliedBy(BigNumber(10).pow(18))\n});\n\nfunction getAddress() { //获取地址\n  web3.eth.getAccounts().then(res => this.address=res[0])\n}\nVue.prototype.$getAddress = getAddress;\n\nimport router from './router'\nVue.use(Element)\nVue.config.productionTip = false\n\n\n\nnew Vue({\n  render: h => h(App),\n  router,\n}).$mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=scss&scpoed=true&\""],"sourceRoot":""}